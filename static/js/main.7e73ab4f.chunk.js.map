{"version":3,"sources":["app/states.js","app/FileReader.jsx","app/tableValidator.js","app/Table.jsx","app/Error.js","App.js","reportWebVitals.js","index.js"],"names":["states","FileReader","props","useState","csvfile","setCSVFile","phoneNumberFormat","v","k","match","hasChildrenFormat","statesFormat","keys","Object","split","map","vLow","toLowerCase","includes","toUpperCase","join","updateData","result","data","isFileHederValid","isCSVFileValid","x","idx","checkForDuplicates","setTableData","console","log","row","email","phone","duplicate","find","f","id","lowerCaseKey","setIsCSVFileValid","className","type","name","onChange","event","target","files","onClick","alert","Papa","parse","complete","skipEmptyLines","header","transform","trim","ageValidator","ageNumber","parseFloat","Number","isInteger","experienceValidator","expNumber","yearlyIncomeValidator","income","incomeNumber","s","length","dateValidator","today","Date","firstFormat","moment","secondFormat","isValid","phoneValidator","phoneNumber","startsWith","childrenValidator","children","licenseValidator","licenseStatesValidator","getValidator","RenderRow","key","Table","getKeys","useEffect","validateData","index","validator","document","getElementById","classList","add","scope","filter","Error","App","tableData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7e73ab4f.chunk.js","sourcesContent":["const states = {\r\n    'alabama'             :  'AL' ,\r\n    'alaska'              :  'AK' ,\r\n    'america samoa'       :  'AS' ,\r\n    'arizona'             :  'AZ' ,\r\n    'arkansas'            :  'AR' ,\r\n    'california'          :  'CA' ,\r\n    'colorado'            :  'CO' ,\r\n    'connecticut'         :  'CT' ,\r\n    'delaware'            :  'DE' ,\r\n    'district of columbia':  'DC' ,\r\n    'micronesia'          :  'FM' ,\r\n    'florida'             :  'FL' ,\r\n    'georgia'             :  'GA' ,\r\n    'guam'                :  'GU' ,\r\n    'hawaii'              :  'HI' ,\r\n    'idaho'               :  'ID' ,\r\n    'illinois'            :  'IL' ,\r\n    'indiana'             :  'IN' ,\r\n    'iowa'                :  'IA' ,\r\n    'kansas'              :  'KS' ,\r\n    'kentucky'            :  'KY' ,\r\n    'louisiana'           :  'LA' ,\r\n    'maine'               :  'ME' ,\r\n    'marshall islands'    :  'MH' ,\r\n    'maryland'            :  'MD' ,\r\n    'massachusetts'       :  'MA' ,\r\n    'michigan'            :  'MI' ,\r\n    'minnesota'           :  'MN' ,\r\n    'mississippi'         :  'MS' ,\r\n    'missouri'            :  'MO' ,\r\n    'montana'             :  'MT' ,\r\n    'nebraska'            :  'NE' ,\r\n    'nevada'              :  'NV' ,\r\n    'new hampshire'       :  'NH' ,\r\n    'new jersey'          :  'NJ' ,\r\n    'new mexico'          :  'NM' ,\r\n    'new york'            :  'NY' ,\r\n    'north carolina'      :  'NC' ,\r\n    'north dakota'        :  'ND' ,\r\n    'ohio'                :  'OH' ,\r\n    'oklahoma'            :  'OK' ,\r\n    'oregon'              :  'OR' ,\r\n    'palau'               :  'PW' ,\r\n    'pennsylvania'        :  'PA' ,\r\n    'puerto rico'         :  'PR' ,\r\n    'rhode island'        :  'RI' ,\r\n    'south carolina'      :  'SC' ,\r\n    'south dakota'        :  'SD' ,\r\n    'tennessee'           :  'TN' ,\r\n    'texas'               :  'TX' ,\r\n    'utah'                :  'UT' ,\r\n    'vermont'             :  'VT' ,\r\n    'virgin island'       :  'VI' ,\r\n    'virginia'            :  'VA' ,\r\n    'washington'          :  'WA' ,\r\n    'west virginia'       :  'WV' ,\r\n    'wisconsin'           :  'WI' ,\r\n    'wyoming'             :  'WY' \r\n    }\r\n\r\n    export default states;","import React, { useState } from 'react';\r\nimport Papa from 'papaparse';\r\nimport states from './states';\r\n\r\n\r\nfunction FileReader(props) {\r\n\r\n    const [csvfile, setCSVFile] = useState();\r\n\r\n    const handleChange = event => {\r\n        setCSVFile(event.target.files[0])\r\n    };\r\n\r\n    const importCSV = () => {\r\n        if (csvfile) {\r\n            if (csvfile.type === \"application/vnd.ms-excel\") {\r\n                props.setIsCSVFileValid(true)\r\n                Papa.parse(csvfile, {\r\n                    complete: updateData,\r\n                    skipEmptyLines: true,\r\n                    header: true,\r\n                    transform: function (v, k) {\r\n                        v = v.trim();\r\n                        v = phoneNumberFormat(v, k);\r\n                        v = hasChildrenFormat(v, k);\r\n                        v = statesFormat(v, k);\r\n                        return v;\r\n                    }\r\n                });\r\n            } else props.setIsCSVFileValid(false)\r\n        } else return alert('Please, upload file')\r\n    };\r\n\r\n    const phoneNumberFormat = (v, k) => {\r\n        if (k === 'Phone') {\r\n            const firstFormat = /^\\d{10}$/;\r\n            const secondFormat = /^\\+1\\d{10}$/;\r\n            const thirdFormat = /^1\\d{10}$/;\r\n            if (v.match(firstFormat)) {\r\n                return `+1${v}`;\r\n            } else if (v.match(secondFormat)) {\r\n                return v;\r\n            } else if (v.match(thirdFormat)) {\r\n                return `+${v}`;\r\n            }\r\n        }\r\n        return v;\r\n    }\r\n\r\n    const hasChildrenFormat = (v, k) => {\r\n        if (k === 'Has children') {\r\n            if (v === \"\") {\r\n                return v = 'FALSE'\r\n            }\r\n        }\r\n        return v;\r\n    }\r\n\r\n    const statesFormat = (v, k) => {\r\n        if (k === 'License states') {\r\n            const keys = Object.keys(states);\r\n            const splitedValue = v.split(/, |,/);\r\n            return splitedValue.map(v => {\r\n                let vLow = v.toLowerCase();\r\n\r\n                if (keys.includes(vLow)) {\r\n                    let abb = states[vLow];\r\n                    return v = abb;\r\n                } else return v.toUpperCase();\r\n            }).join('|');\r\n        }\r\n        return v;\r\n    }\r\n\r\n    const updateData = (result) => {\r\n        let data = result.data;\r\n        if (!isFileHederValid(data)) {\r\n            return;\r\n        }\r\n        if (props.isCSVFileValid) {\r\n            data = data.map((x, idx) => {\r\n                x['id'] = idx + 1;\r\n                x['Duplicate with'] = null;\r\n                return x;\r\n            })\r\n            checkForDuplicates(data);\r\n            props.setTableData(data);\r\n            console.log(`Finished: `, data);\r\n        }\r\n    }\r\n\r\n\r\n    const checkForDuplicates = (data) => {\r\n        data.map(row => {\r\n            const email = row['Email'].toLowerCase()\r\n            const phone = row['Phone'].toLowerCase()\r\n            const duplicate = data.find(f => (f['Email'].toLowerCase() === email\r\n                || f['Phone'].toLowerCase() === phone) && f.id !== row.id)\r\n\r\n            if (duplicate) {\r\n                row['Duplicate with'] = duplicate.id\r\n            }\r\n        })\r\n    }\r\n\r\n    const isFileHederValid = (data) => {\r\n        let keys = Object.keys(data[0]);\r\n        let lowerCaseKey = keys.map(k => k.toLowerCase())\r\n        if (!lowerCaseKey.includes('full name') || !lowerCaseKey.includes('phone') || !lowerCaseKey.includes('email')) {\r\n            props.setIsCSVFileValid(false);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Import Users</h2>\r\n            <input\r\n                className=\"csv-input\"\r\n                type=\"file\"\r\n                name=\"csvfile\"\r\n                onChange={handleChange}\r\n            />\r\n            <p />\r\n            <button className='btn btn-primary' onClick={importCSV}> Upload now</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default FileReader;","import moment from \"moment\";\r\n\r\nfunction getValidator(type) {\r\n    switch (type) {\r\n        case 'Age':\r\n            return ageValidator;\r\n        case 'Experience':\r\n            return experienceValidator;\r\n        case 'Yearly Income':\r\n            return yearlyIncomeValidator;\r\n        case 'Expiration date':\r\n            return dateValidator;\r\n        case 'Phone':\r\n            return phoneValidator;\r\n        case 'Has children':\r\n            return childrenValidator;\r\n        case 'License number':\r\n            return licenseValidator;\r\n        case 'License states':\r\n            return licenseStatesValidator;\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\nfunction ageValidator(data) {\r\n    const ageNumber = parseFloat(data['Age']);\r\n    return ageNumber >= 21 && ageNumber <= 110 && Number.isInteger(ageNumber);\r\n}\r\n\r\nfunction experienceValidator(data) {\r\n    const expNumber = parseFloat(data['Experience']);\r\n    const ageNumber = parseFloat(data['Age']);\r\n    return expNumber >= 0 && expNumber < ageNumber\r\n}\r\n\r\nfunction yearlyIncomeValidator(data) {\r\n    const income = data['Yearly Income'];\r\n    const incomeNumber = parseFloat(income);\r\n    const s = income.split('.');\r\n    if (Number.isInteger(incomeNumber) && incomeNumber < 1000000 && incomeNumber >= 0) {\r\n        return true\r\n    } else if (s[1]) {\r\n        if ((s[1].length > 2)) {\r\n            return false\r\n        }\r\n    } else return false\r\n\r\n    return true\r\n}\r\n\r\nfunction dateValidator(data) {\r\n    const today = new Date();\r\n    const firstFormat = moment(data['Expiration date'], 'YYYY-MM-DD', true);\r\n    const secondFormat = moment(data['Expiration date'], 'MM/DD/YYYY', true);\r\n    if (today > data['Expiration date']) {\r\n        return false;\r\n    }\r\n    return firstFormat.isValid() || secondFormat.isValid();\r\n\r\n}\r\n\r\nfunction phoneValidator(data) {\r\n    const phoneNumber = data['Phone'];\r\n\r\n    return phoneNumber.startsWith('+1') && phoneNumber.length === 12\r\n}\r\n\r\nfunction childrenValidator(data) {\r\n    const children = data['Has children'].toLowerCase();\r\n    if (children === 'true' || children === 'false' || children === \"\") {\r\n        return true;\r\n    } else return false;\r\n}\r\n\r\nfunction licenseValidator(data) {\r\n    return data['License number'].length === 6;\r\n}\r\n\r\nfunction licenseStatesValidator(data) {\r\n    return data['License states'].match(/[A-Z]{2}\\||[A-Z]{2}/);\r\n}\r\nexport default getValidator;","import React, { useEffect } from 'react';\r\nimport './Table.css';\r\nimport getValidator from './tableValidator';\r\n\r\nfunction Table(props) {\r\n\r\n    const getKeys = () => {\r\n        if (props.data !== []) {\r\n            return Object.keys(props.data[0])\r\n        } return null;\r\n    }\r\n\r\n    useEffect(() => {\r\n        validateData();\r\n    }, [props.data])\r\n\r\n    const validateData = () => {\r\n        props.data.map((row, index) => {\r\n            const keys = getKeys();\r\n            return keys.map((key) => {\r\n                const validator = getValidator(key);\r\n                if (validator) {\r\n                    if (!validator(row)) {\r\n                        document.getElementById(key + '-' + index).classList.add(\"failed-cell\");\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n    return (\r\n        <div className='d-flex justify-content-center'>\r\n            <table className=\"table small\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Id</th>\r\n                        <th scope=\"col\">Full Name</th>\r\n                        <th scope=\"col\">Phone</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Age</th>\r\n                        <th scope=\"col\">Experience</th>\r\n                        <th scope=\"col\">Yearly Income</th>\r\n                        <th scope=\"col\">Has children</th>\r\n                        <th scope=\"col\">License states</th>\r\n                        <th scope=\"col\">Expiration date</th>\r\n                        <th scope=\"col\">License number</th>\r\n                        <th scope=\"col\">Duplicate with</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.data.map((row, index) => {\r\n                        return <tr key={index}>\r\n                            <th scope=\"row\">{row.id}</th>\r\n                            <RenderRow idx={index} data={row} keys={getKeys().filter(x => x !== 'id')} /></tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst RenderRow = (props) => {\r\n    return props.keys.map((key) => {\r\n        return <td key={key + '-' + props.idx} id={key + '-' + props.idx}>{props.data[key]}</td>\r\n    })\r\n}\r\n\r\n\r\nexport default Table;\r\n\r\n","import React from 'react';\r\n\r\nfunction Error() {\r\n    return (\r\n        <div className=\"container error\">\r\n            File is invalid\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import React, { useState } from 'react';\nimport FileReader from './app/FileReader';\nimport Table from './app/Table';\nimport Error from './app/Error';\nimport './App.css';\n\nfunction App() {\n  const [tableData, setTableData] = useState([]);\n  const [isCSVFileValid, setIsCSVFileValid] = useState(true);\n\n  return (\n    <div className=\"App\">\n      <FileReader setTableData={setTableData} isCSVFileValid={isCSVFileValid} setIsCSVFileValid={setIsCSVFileValid} />\n      {isCSVFileValid ? <Table data={tableData} setTableData={setTableData} /> : <Error/>}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}